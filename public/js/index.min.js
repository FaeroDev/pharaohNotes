let noteTitle,noteText,saveNoteBtn,newNoteBtn,noteList;"/notes"===window.location.pathname&&(noteTitle=document.querySelector(".note-title"),noteText=document.querySelector(".note-textarea"),saveNoteBtn=document.querySelector(".save-note"),newNoteBtn=document.querySelector(".new-note"),noteList=document.querySelectorAll(".list-container .list-group"));const show=elem=>{elem.style.display="inline"},hide=elem=>{elem.style.display="none"};let activeNote={};const getNotes=()=>fetch("/api/notes/",{method:"GET",headers:{"Content-Type":"application/json"}}),saveNote=note=>fetch("/api/notes",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(note)}),deleteNote=id=>fetch(`/api/notes/${id}`,{method:"DELETE",headers:{"Content-Type":"application/json"}}),renderActiveNote=()=>{hide(saveNoteBtn),activeNote.id?(noteTitle.setAttribute("readonly",!0),noteText.setAttribute("readonly",!0),noteTitle.value=activeNote.title,noteText.value=activeNote.text):(noteTitle.value="",noteText.value="")},handleNoteSave=()=>{const newNote={title:noteTitle.value,text:noteText.value};saveNote(newNote).then(()=>{getAndRenderNotes(),renderActiveNote()})},handleNoteDelete=e=>{e.stopPropagation();const note=e.target,noteId=JSON.parse(note.parentElement.getAttribute("data-note")).id;activeNote.id===noteId&&(activeNote={}),deleteNote(noteId).then(()=>{getAndRenderNotes(),renderActiveNote()})},handleNoteView=e=>{e.preventDefault(),activeNote=JSON.parse(e.target.parentElement.getAttribute("data-note")),renderActiveNote()},handleNewNoteView=e=>{activeNote={},renderActiveNote()},handleRenderSaveBtn=()=>{noteTitle.value.trim()&&noteText.value.trim()?show(saveNoteBtn):hide(saveNoteBtn)},renderNoteList=async notes=>{let jsonNotes=await notes.json();"/notes"===window.location.pathname&&noteList.forEach(el=>el.innerHTML="");let noteListItems=[];const createLi=(text,delBtn=!0)=>{const liEl=document.createElement("li");liEl.classList.add("list-group-item");const spanEl=document.createElement("span");if(spanEl.innerText=text,spanEl.addEventListener("click",handleNoteView),liEl.append(spanEl),delBtn){const delBtnEl=document.createElement("i");delBtnEl.classList.add("fas","fa-trash-alt","float-right","text-danger","delete-note"),delBtnEl.addEventListener("click",handleNoteDelete),liEl.append(delBtnEl)}return liEl};0===jsonNotes.length&&noteListItems.push(createLi("No saved Notes",!1)),jsonNotes.forEach(note=>{const li=createLi(note.title);li.dataset.note=JSON.stringify(note),noteListItems.push(li)}),"/notes"===window.location.pathname&&noteListItems.forEach(note=>noteList[0].append(note))},getAndRenderNotes=()=>getNotes().then(renderNoteList);"/notes"===window.location.pathname&&(saveNoteBtn.addEventListener("click",handleNoteSave),newNoteBtn.addEventListener("click",handleNewNoteView),noteTitle.addEventListener("keyup",handleRenderSaveBtn),noteText.addEventListener("keyup",handleRenderSaveBtn)),getAndRenderNotes();